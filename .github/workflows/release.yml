name: Clone, Build, Sign and Release Guahao

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: ''
    
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Clone private repo
        run: |
          git clone https://x-access-token:${{ secrets.PRIVATE_REPO_TOKEN }}@github.com/yuwet15/guahao-app.git
          cd guahao-app

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rust-src
          
      - name: Add Intel Mac target
        if: matrix.args == '--target x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin
        
      - name: Install dependencies
        working-directory: ./guahao-app
        run: yarn install

      - name: Get version from tauri.conf.json
        id: get_version
        shell: bash
        run: |
          VERSION=$(node -p "require('./guahao-app/src-tauri/tauri.conf.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Extract changelog for this version
        id: changelog
        shell: bash
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          BODY=$(awk "/## v$VERSION/{flag=1;next}/## v/{flag=0}flag" ./guahao-app/CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and publish with Tauri
        uses: tauri-apps/tauri-action@v0.5.22
        with:
          projectPath: ./guahao-app
          tagName: v__VERSION__
          releaseName: "Guahao App v__VERSION__"
          releaseBody: ${{ steps.changelog.outputs.changelog }}
          includeUpdaterJson: true
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_RELEASE_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    outputs:
      version: ${{ steps.get_version.outputs.version }}
  
  sign:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Download release assets
        uses: robinraju/release-downloader@v1.10
        with:
          repository: yuwet15/guahao-app-releases
          tag: v${{ needs.build.outputs.version }}
          fileName: "*.exe"
          token: ${{ secrets.REPO_RELEASE_TOKEN }}

      - name: Download release assets (msi)
        uses: robinraju/release-downloader@v1.10
        with:
          repository: yuwet15/guahao-app-releases
          tag: v${{ needs.build.outputs.version }}
          fileName: "*.msi"
          token: ${{ secrets.REPO_RELEASE_TOKEN }}

      - name: Find MSI and EXE files
        id: find_files
        shell: pwsh
        run: |
          $paths = Get-ChildItem -Recurse -Include *.msi, *.exe | ForEach-Object { $_.FullName }
          $joined = $paths -join "`n"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "files<<EOF`n$joined`nEOF"
      
      - name: Sign all binaries
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: ${{ secrets.WINDOWS_PFX }}
          password: ${{ secrets.WINDOWS_PFX_PASS }}
          files: ${{ steps.find_files.outputs.files }}

      - name: Upload signed assets (replace)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          files: |
            **/*.exe
            **/*.msi
          token: ${{ secrets.REPO_RELEASE_TOKEN }}
